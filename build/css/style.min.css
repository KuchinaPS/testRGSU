/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{font:400 18px/1.1 Russia,Arial,sans-serif;margin:0;padding:0;background:linear-gradient(84.71deg,#3464e0 1.19%,#2955c9 99.81%);background-repeat:no-repeat;background-attachment:fixed;color:#9cbaf0}img{max-width:100%}a{text-decoration:none}h1,h2,h3,h4,h5,h6{margin:0}ul{list-style:none;margin:0;padding:0}.main-header__wrap{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-flex:0;flex:0 1 auto;-webkit-box-pack:justify;justify-content:space-between}.main-header__logo a{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;color:#fff;outline:0}.main-header__logo p{padding-left:14px;font-size:1.6vw}.main-header__logo p:focus,.main-header__logo p:hover{text-decoration:underline}.main-header__logo p:active{color:rgba(255,255,255,.8);text-decoration:none}.main-header__nav{width:58%}.main-header__list{display:-webkit-box;display:flex;flex-wrap:wrap}.main-header__item{padding:5px 23px;cursor:pointer}.main-header__item__active{color:#fff}.main-header__item>a{display:block;font-size:1.2vw}.main-header__item>a:focus,.main-header__item>a:hover{color:rgba(255,255,255,.8)}.main-header__item>a:active{color:#fff}.wrapper{width:100%;max-width:1440px;margin:0 auto;padding:10px 45px}.btn{border:none;background:#1740aa;border-radius:50px;color:#fff;font-size:.97vw;white-space:nowrap;padding:13px 33px 13px 63px;position:relative;cursor:pointer}.btn__bottom{background:#3464e0;border:1px solid #3464e0;border-radius:4px;padding:9px 17px;font-size:16px;line-height:1.6}.btn__cancel{background:#fff;border:1px solid #c3cad6;border-radius:4px;color:#c3cad6;padding:13px 30px}.btn:after{background:url(../img/enter.svg) no-repeat;content:"";position:absolute;width:26px;height:25px;left:28px;top:8px}.btn__bottom:after,.btn__cancel:after{background:0 0;content:""}.btn:focus,.btn:hover{outline:0;text-decoration:underline}.btn:active{background:#0a36a8}.tabs{background:#fff;position:relative;left:50%;top:150%;-webkit-transform:translate(-50%,15%);transform:translate(-50%,15%);border-radius:20px;font-size:26px;line-height:1;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;justify-content:space-around;box-shadow:0 -26px 0 -8px rgba(255,255,255,.8),0 -48px 0 -14px rgba(255,255,255,.6)}.tabs__signIn{max-width:490px;min-height:408px;padding:calc(4% - 36px) calc(6% - 11px)}.tabs__signUp{max-width:890px;min-height:559px;padding:calc(5% - 56px) calc(4% - 18px)}.hidden{display:none}.tabs-triggers{display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center}.tabs-triggers__item{color:#c3cad6;margin-right:20px;font-size:26px}.tabs-triggers__item--active{color:#3464e0}.tabs-triggers__item:last-child{margin-right:0}.tabs-triggers__item:focus,.tabs-triggers__item:hover{color:#8d929c;outline:0}.tabs-triggers__item:active{color:#c3cad6}.tabs-triggers__item--active:focus,.tabs-triggers__item--active:hover{color:#1740aa;outline:0}.tabs-triggers__item--active:active{color:#3464e0}.tabs-content__item{display:none}.tabs-content__item--active{display:block}.tabs-content__item--reg .form__input{max-width:280px}.form__wrap{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex:1 0 auto}.form__wrap--check{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.form__row{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;margin-bottom:14px;-webkit-box-flex:1;flex:1 0 auto}.form__row--reg{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between}.form__row--reg:nth-child(2){-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;-webkit-box-pack:justify;justify-content:space-between;margin-bottom:14px}.form__row:nth-child(2){margin-bottom:42px}.form__row:last-child{-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;margin-bottom:0;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between}.form__label{font-size:15px;line-height:1.6;color:#444;margin-bottom:8px}.form__label span{color:red}.form__input{border:1px solid #f1f4f9;outline:red;border-radius:4px;padding:10px 0 8px 16px;font-size:16px}.form__link{font-size:16px;line-height:1.6px;color:#3464e0;display:block;padding:10px}.form__check{position:absolute;z-index:-1;opacity:0}.form__check+label{display:-webkit-inline-box;display:inline-flex;-webkit-box-align:center;align-items:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative}.form__check+label::before{content:'';width:20px;height:20px;border:1px solid #3464e0;margin-right:.5em;background-repeat:no-repeat;background-position:center center;background-size:50% 50%}.form__check:checked+label::after{content:'';position:absolute;background:#3464e0;width:10px;height:10px;left:5px}::-webkit-input-placeholder{color:#c3cad6}::-moz-placeholder{color:#c3cad6}:-moz-placeholder{color:#c3cad6}:-ms-input-placeholder{color:#c3cad6}.form__input:focus,.form__input:hover{border:1px solid #3464e0;outline:0}.form__input:active{border:1px solid #c3cad6}.form__link:focus,.form__link:hover{-webkit-text-decoration:underline #1740aa;text-decoration:underline #1740aa;outline:0}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
